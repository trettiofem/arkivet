generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum ResourceType {
  IMAGE
  VIDEO
  POSTER
  PATCH
  MAGAZINE
  FILE
}

model Album {
  path String       @id
  type ResourceType

  // 1 -- *
  resources Resource[]
  saves     SavedAlbum[]

  @@map("albums")
}

model Resource {
  // General metadata
  resource_id   String       @id @default(uuid())
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  name          String
  type          ResourceType
  size          Int
  data_uri      String
  thumbnail_uri String?
  description   String?

  // Attributes
  nsfw     Boolean
  spotlit  Boolean
  unsorted Boolean

  // 1 -- *
  comments Comment[]
  saves    SavedResource[]
  tags     Tag[]

  // * -- 1
  author    User   @relation(fields: [author_id], references: [user_id])
  author_id String
  album     Album  @relation(fields: [path], references: [path])
  path      String

  @@map("resources")
}

model User {
  user_id  String  @id @default(uuid())
  username String
  program  String
  year     Int
  pfp_uri  String?

  // 1 -- *
  resources       Resource[]
  comments        Comment[]
  tags            Tag[]
  saved_resources SavedResource[]
  saved_albums    SavedAlbum[]

  @@map("users")
}

model Comment {
  comment_id String   @id @default(uuid())
  text       String
  created_at DateTime

  // * -- 1
  resource    Resource @relation(fields: [resource_id], references: [resource_id])
  resource_id String
  author      User     @relation(fields: [author_id], references: [user_id])
  author_id   String

  @@map("comments")
}

model Tag {
  // * -- 1
  resource       Resource @relation(fields: [resource_id], references: [resource_id])
  resource_id    String
  tagged_user    User     @relation(fields: [tagged_user_id], references: [user_id])
  tagged_user_id String

  // For use with images specifically
  use_floating_tag Boolean
  top              Decimal @default(0.0)
  left             Decimal @default(0.0)
  width            Decimal @default(0.0)
  height           Decimal @default(0.0)

  @@id([resource_id, tagged_user_id])
  @@map("tags")
}

model SavedResource {
  // * -- 1
  user        User     @relation(fields: [user_id], references: [user_id])
  user_id     String
  resource    Resource @relation(fields: [resource_id], references: [resource_id])
  resource_id String

  @@id([user_id, resource_id])
  @@map("saved_resources")
}

model SavedAlbum {
  // * -- 1
  user    User   @relation(fields: [user_id], references: [user_id])
  user_id String
  album   Album  @relation(fields: [path], references: [path])
  path    String

  @@id([user_id, path])
  @@map("saved_albums")
}
